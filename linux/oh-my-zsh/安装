sudo apt install -y git
sudo apt install  -y zsh
wget https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh -O - | sh
chsh -s /usr/bin/zsh

git clone git://github.com/jeremyFreeAgent/oh-my-zsh-powerline-theme 
$ sudo ./oh-my-zsh-powerline-theme/install.sh 

$ git clone https://github.com/powerline/fonts.git
$ sudo ./fonts/install.sh
到此字体安装完成，之后在终端命令行工具的偏好设置设置:
找到“文本->>字体->>更改” ，"所有字体"中选中“ Meslo LG M for powerLine“ 字体


$ vim  ~/.zshrc   //vim 编辑 zshrc 配置文件
ZSH_THEME="robbyrussel"  修改此项为设置主题： ZSH_THEME="powerline" 

安装autojump
使用sudo apt-get install autojump命令安装自动跳转插件，如果找不到autojump，则先使用sudo apt-get update更新源之后再安装。
安装成功后，打开/usr/share/doc/autojump/README.Debian文件，此文件是教你如何配置autojump的，由于使用的shell是zsh，因此需要在.zshrc配置文件的最后一行加上. /usr/share/autojump/autojump.sh以使得qutojump生效，最后再source ~/.zshrc重新编译zsh，ZSH_THEME="funky" ,此时autojump已经生效。

2、安装zsh-autosuggestions
git clone git://github.com/zsh-users/zsh-autosuggestions $ZSH_CUSTOM/plugins/zsh-autosuggestions


安装zsh-syntax-highlighting语法高亮插件
官网：https://github.com/zsh-users/zsh-syntax-highlighting
安装：
git clone https://github.com/zsh-users/zsh-syntax-highlighting.git 
echo "source ${(q-)PWD}/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh" >> ${ZDOTDIR:-$HOME}/.zshrc
生效：
source ~/.zshrc


sudo apt-get update
sudo apt-get install zsh
sh -c "$(wget https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh -O -)"
然后termianl关闭，然后重新登陆就可以启用zsh啦

2.zsh-autosuggestions安装
这个也很简单

git clone https://github.com/zsh-users/zsh-autosuggestions ~/.zsh/zsh-autosuggestions
source ~/.zsh/zsh-autosuggestions/zsh-autosuggestions.zsh
然后你会惊奇的发现，你在敲击一些命令的时候，会自动提示你的历史命令，是不是很好用。zsh的更多功能，请参考我的参考文献哈。

但是这样重新打开terminal的时候，你会发现没有提示了，这个时候我们需要在zshrc中加入source操作

vim ~/.zshrc
 
找个空地方把下面的配置添加上去
# Load zsh-autosuggestions.

--------------------- 
版权声明：本文为CSDN博主「农民小飞侠」的原创文章，遵循CC 4.0 by-sa版权协议，转载请附上原文出处链接及本声明。
原文链接：https://blog.csdn.net/w5688414/article/details/83036991


安装oh-my-zsh
oh-my-zsh依赖于zsh，需要先安装zsh

yum install zsh

如果当前的shell不是zsh，输入chsh后，输入/bin/zsh，回车

yum install git

sh -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"

 

安装zsh-autosuggestions
git clone git://github.com/zsh-users/zsh-autosuggestions $ZSH_CUSTOM/plugins/zsh-autosuggestions
在.zshrc中plugins增加zsh-autosuggestions,  
在.zshrc中加入下面一行内容，使用逗号就可以自动补全
bindkey ',' autosuggest-accept


 source ~/.zshrc

 

安装autojump
git clone https://github.com/joelthelion/autojump.git

直接切换至autojump目录./install.py
(如果这里没装python要装,不过貌似现在都带的)装完会有带下面的这种提示复制至 ./zshrc中 我是放在plugins下面的

[[ -s ~/.autojump/etc/profile.d/autojump.sh ]] &;&; . ~/.autojump/etc/profile.d/autojump.sh      (有可能不一样,就像我家腐竹长树上一样)

这个也需要添加至plugins

 source ~/.zshrc

 

ubuntu下，推荐用下面的方式。

Autojump – Linux 文件系统导航的最快方式

Autojump 应用可以从用户那里学习并帮助用户在 Linux 命令行中进行更轻松的目录导航。与传统的 cd 命令相比，autojump 能够更加快速地导航至目的目录。

注意：需要最新版的Python做支持

先升级下系统保证是最新版的Python

apt-get update && apt-get upgrade && apt-get dist-upgrade

然后 安装autojump 

    apt-get install autojump

安装完成后要有一些配置 才能使用 autojump。为了暂时激活 autojump 应用，即直到你关闭当前会话或打开一个新的会话之前让 autojump 均有效，你需要以常规用户身份运行下面的命令:
    source /usr/share/autojump/autojump.sh on startup

为了使得 autojump 在 BASH shell 中永久有效，你需要运行下面的命令:
   echo '. /usr/share/autojump/autojump.zsh'>>~/.bashrc

然后就可以愉快的使用 j 命令去跳转目录了。前提是你有cd 过的目录才能跳转哟！

 
安装zsh-syntax-highlighting
git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting
添加至plugins

 source ~/.zshrc
